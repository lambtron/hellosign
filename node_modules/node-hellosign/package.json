{
  "name": "node-hellosign",
  "version": "0.0.2",
  "description": "API wrapper for hellosign.com",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha -t 20000 --reporter spec test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ferlores/node-hellosign"
  },
  "keywords": [
    "API",
    "hellosign"
  ],
  "author": {
    "name": "Fernando Lores",
    "email": "ferlores@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "request": "2.11.x",
    "underscore": "1.4.x"
  },
  "devDependencies": {
    "mocha": "1.6.x"
  },
  "readme": "# node-hellosign\n\n[![Build Status](https://travis-ci.org/ferlores/node-hellosign.png)](https://travis-ci.org/ferlores/node-hellosign)\n\nIt is a wrapper for [hellosign.com API](http://www.hellosign.com/api/reference)\n\n## Install\n\n```\nnpm install node-hellosign\n```\n\n## Quick Start\n\n```javascript\nvar HelloSign = require('node-hellosign')\n  , username = process.env['USERNAME']\n  , password = process.env['PASSWORD']\n  , api = new HelloSign({\n    username: username\n  , password: password\n  })\n\nvar options = {\n  'signers[0][name]': 'Test User'\n, 'signers[0][email_address]': username\n, 'file[1]': fs.createReadStream(path.join(__dirname, 'test.pdf'))\n}\n\napi.createRequest(options, function (er, res) {\n  console.log(res)\n})\n```\n\n## Callbacks and streaming\n\n```\nvar stream = api.getFinalCopy({signature_request_id: id}, function (er, file) {\n  process(file)  // process the hole file at the en of teh response\n})\n\n// process the chunks as they arrive\nvar file\nstream.on('data', function (chunk) {\n  file += chunk\n})\n\nstream.on('end', function () {\n  console.log(file.length)\n})\n```\n\n## Methods\nAll the methods receive two params:\n* ```options``` _(optional)_: an object with the parameters of the request. Check [here](http://www.hellosign.com/api/reference) how is this object depending on the request\n* ```callback``` _(required)_: callback, it gets as param the error and the response\n\nCheck http://www.hellosign.com/api/reference\n\n### Account\n* ```getAccount(cb)```: Returns your Account settings.\n* ```updateAccount(opts, cb)```: Updates your Account's settings.\n* ```createAccount(opts, cb)```: Signs up for a new HelloSign Account.\n\n### Signature Requests\n* ```getRequest(cb)```: Gets a SignatureRequest that includes the current status for each signer \n* ```listRequest(cb)```: Lists the SignatureRequests (both inbound and outbound) that you have access to.\n* ```createRequest(opts, cb)```: Creates and sends a new SignatureRequest with the submitted documents.\n* ```sendForm(opts, cb)```: Creates and sends a new SignatureRequest based off of a ReusableForm.\n* ```sendReminder(opts, cb)```: Sends an email to the signer reminding them to sign the signature request.\n* ```cancelRequest(opts, cb)```: Cancels a SignatureRequest.\n* ```getFinalCopy(cb)```: Download the PDF copy of the finalized documents.\n\n### Reusable Forms\n* ```getForm(cb)```: Gets a ReusableForm which includes a list of Accounts that can access it.\n* ```listForms(cb)```: Lists your ReusableForms.\n* ```addUserForm(opts, cb)```: Gives the specified Account access to the specified ReusableForm.\n* ```removeUserForm(opts, cb)```: Removes the specified Account's access to the specified ReusableForm.\n\n### Teams\n* ```getTeam(cb)```: Gets your Team and a list of its members\n* ```createTeam(opts, cb)```: Creates a new Team\n* ```updateTeam(ots, cb)```: Updates a Team's name\n* ```destroyTeam(cb) ```: Deletes your Team.\n* ```addMember(opts, cb)```: Adds or invites a user to your Team\n* ```removeMember(opts, cb)```: Removes a user from your Team\n\n### Unclaimed Draft\n* ```createUnclaimedDraft(opts, cb)```: Creates a new Draft that can be claimed using the claim URL.\n\n## Tests\n\nIn order to run the tests you need to register an account and to define a reusable form\n\n```bash\nexport USERNAME=your@account.com\nexport PASSWORD=xxxxxxx \ncd node_modules/node-hellosign\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ferlores/node-hellosign/issues"
  },
  "homepage": "https://github.com/ferlores/node-hellosign",
  "_id": "node-hellosign@0.0.2",
  "dist": {
    "shasum": "d7badb7d1b6bec50b8d206e39d0275a32b17aa52"
  },
  "_from": "node-hellosign@*",
  "_resolved": "https://registry.npmjs.org/node-hellosign/-/node-hellosign-0.0.2.tgz"
}
